version: '3'
services:
    gluetun:
        image: qmcgaw/gluetun
        container_name: gluetun
        networks:
            - caddy
            # line above must be uncommented to allow external containers to connect.
            # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
        cap_add:
            - NET_ADMIN
        devices:
            - /dev/net/tun:/dev/net/tun
        ports:
            - 8888:8888/tcp # HTTP proxy
            - 8388:8388/tcp # Shadowsocks
            - 8388:8388/udp # Shadowsocks
            - 8080:8080
        volumes:
            - /home/axel/Desktop/Docker/gluetun:/gluetun
        environment:
            # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
            - VPN_SERVICE_PROVIDER=protonvpn
        # OpenVPN:
            - OPENVPN_USER=${OPENVPN_USER}
            - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
            - VPN_PORT_FORWARDING=on
        # Wireguard:
            # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=
            # - WIREGUARD_ADDRESSES=10.64.222.21/32
            # Timezone for accurate log times
            # - TZ=America/Los_Angeles
        # Server list updater
            # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
            - SERVER_CITIES=Los Angeles
            - UPDATER_PERIOD=24h
        restart: always
        labels:
            caddy: ${LABEL_QBITTORRENT}
            caddy.reverse_proxy: "{{upstreams 8080}}"
        
    qbittorrent:
        image: lscr.io/linuxserver/qbittorrent:4.6.0
        container_name: qbittorrent
        depends_on:
            - gluetun
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
            - WEBUI_PORT=8080
        volumes:
            - /home/axel/Desktop/Docker/qBittorrent/config:/config
            - /mnt/storage/data/torrents/:/data
        network_mode: "service:gluetun"
        restart: unless-stopped
        
    jellyfin:
        image: jellyfin/jellyfin:latest
        container_name: jellyfin # runtime: nvidia
        networks:
            - caddy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
            - NVIDIA_VISIBLE_DEVICES=all
        volumes:
            - /home/axel/Desktop/Docker/Jellyfin/config:/config
            - /mnt/storage/data/media:/data/media
        ports:
            - 8096:8096
        restart: unless-stopped
        labels:
            caddy: ${LABEL_JELLYFIN}
            caddy.reverse_proxy: "{{upstreams 8096}}"
        runtime: nvidia
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities: [ gpu ]
    sonarr:
        image: lscr.io/linuxserver/sonarr:develop
        container_name: sonarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
        volumes:
            - /home/axel/Desktop/Docker/Sonarr:/config
            - /mnt/storage/data/:/data
        ports:
            - 8989:8989
        restart: unless-stopped

    radarr:
        image: lscr.io/linuxserver/radarr:latest
        container_name: radarr
        networks:
            - caddy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
        labels:
            caddy: ${LABEL_RADARR}
            caddy.reverse_proxy: "{{upstreams 7878}}"
        volumes:
            - /home/axel/Desktop/Docker/Radarr:/config
            - /mnt/storage/data/:/data
        ports:
            - 7878:7878
        restart: unless-stopped
        
    prowlarr:
        image: lscr.io/linuxserver/prowlarr:latest
        container_name: prowlarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/Los_Angeles
        volumes:
            - /home/axel/Desktop/Docker/prowlarr:/config
        ports:
            - 9696:9696
        restart: unless-stopped

    flaresolverr:
        # DockerHub mirror flaresolverr/flaresolverr:latest
        image: ghcr.io/flaresolverr/flaresolverr:latest
        container_name: flaresolverr
        environment:
            - LOG_LEVEL=${LOG_LEVEL:-info}
            - LOG_HTML=${LOG_HTML:-false}
            - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
            - TZ=America/Los_Angeles
        ports:
            - "${PORT:-8191}:8191"
        restart: unless-stopped

    notifiarr:
        container_name: notifiarr
        hostname: notifiarr
        image: golift/notifiarr
        restart: unless-stopped
        ports:
            - "5454:5454"
        volumes:
            - /home/axel/Desktop/Docker/notifiarr:/config
            - /var/run/utmp:/var/run/utmp
            - /etc/machine-id:/etc/machine-id

    caddy:
        image: lucaslorentz/caddy-docker-proxy:latest
        container_name: caddy
        ports:
            - "81:80"
            - "443:443"
            - "443:443/udp"
        environment:
            - CADDY_INGRESS_NETWORKS=caddy
            - PUID=1000
            - PGID=1000
        networks:
            - caddy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /home/axel/Desktop/Docker/:/data
        restart: unless-stopped

    # transmission:
    #     image: haugene/transmission-openvpn:latest
    #     container_name: docker-transmission
    #     cap_add:
    #         - NET_ADMIN
    #     restart: always
    #     networks:
    #         - caddy
    #     ports:
    #         - 9091:9091
    #         - 9999:8888
    #     sysctls:
    #         - "net.ipv6.conf.all.disable_ipv6=0"
    #     volumes:
    #         - /mnt/storage/data/torrents/:/data
    #         - /home/axel/Desktop/Docker/Transmission/config/:/config
    #     environment:
    #         - OPENVPN_PROVIDER=MULLVAD
    #         - OPENVPN_CONFIG=us_lax
    #         - OPENVPN_USERNAME=0023297758864081
    #         - OPENVPN_PASSWORD=m
    #         - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
    #         - LOCAL_NETWORK=192.168.1.0/24
    #         - PUID=1000
    #         - PGID=1000
    #         - TRANSMISSION_RPC_USERNAME=admin
    #         - TRANSMISSION_PORT_FORWARDING_ENABLED=true
    #         - TRANSMISSION_PEER_PORT=60222
    #         - TRANSMISSION_RATIO_LIMIT_ENABLED=true
    #         - TRANSMISSION_RATIO_LIMIT=2
    #         - TRANSMISSION_RPC_PASSWORD=anus
    #         - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
    #         - TRANSMISSION_WEB_UI=flood-for-transmission
    #         - TRANSMISSION_UPLOAD_SLOTS_PER_TORRENT=5
    #         - TRANSMISSION_DOWNLOAD_DIR=/data/
    #     labels:
    #         caddy: ${LABEL_TRANSMISSION}
    #         caddy.reverse_proxy: "{{upstreams 9091}}"
        
networks:
    caddy:
        external: true
volumes:
    caddy_data: {}
